// Code generated by "packer-sdc mapstructure-to-hcl2"; DO NOT EDIT.

package supervisor

import (
	"github.com/hashicorp/hcl/v2/hcldec"
	"github.com/zclconf/go-cty/cty"
)

// FlatWatchSourceConfig is an auto-generated flat version of WatchSourceConfig.
// Where the contents of a field with a `mapstructure:,squash` tag are bubbled up.
type FlatWatchSourceConfig struct {
	TimeoutSecond *int64 `mapstructure:"watch_source_timeout_sec" cty:"watch_source_timeout_sec" hcl:"watch_source_timeout_sec"`
}

// FlatMapstructure returns a new FlatWatchSourceConfig.
// FlatWatchSourceConfig is an auto-generated flat version of WatchSourceConfig.
// Where the contents a fields with a `mapstructure:,squash` tag are bubbled up.
func (*WatchSourceConfig) FlatMapstructure() interface{ HCL2Spec() map[string]hcldec.Spec } {
	return new(FlatWatchSourceConfig)
}

// HCL2Spec returns the hcl spec of a WatchSourceConfig.
// This spec is used by HCL to read the fields of WatchSourceConfig.
// The decoded values from this spec will then be applied to a FlatWatchSourceConfig.
func (*FlatWatchSourceConfig) HCL2Spec() map[string]hcldec.Spec {
	s := map[string]hcldec.Spec{
		"watch_source_timeout_sec": &hcldec.AttrSpec{Name: "watch_source_timeout_sec", Type: cty.Number, Required: false},
	}
	return s
}
