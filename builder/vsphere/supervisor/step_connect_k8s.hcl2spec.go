// Code generated by "packer-sdc mapstructure-to-hcl2"; DO NOT EDIT.

package supervisor

import (
	"github.com/hashicorp/hcl/v2/hcldec"
	"github.com/zclconf/go-cty/cty"
)

// FlatConnectK8sConfig is an auto-generated flat version of ConnectK8sConfig.
// Where the contents of a field with a `mapstructure:,squash` tag are bubbled up.
type FlatConnectK8sConfig struct {
	KubeconfigPath *string `mapstructure:"kubeconfig_path" cty:"kubeconfig_path" hcl:"kubeconfig_path"`
	K8sNamespace   *string `mapstructure:"k8s_namespace" cty:"k8s_namespace" hcl:"k8s_namespace"`
}

// FlatMapstructure returns a new FlatConnectK8sConfig.
// FlatConnectK8sConfig is an auto-generated flat version of ConnectK8sConfig.
// Where the contents a fields with a `mapstructure:,squash` tag are bubbled up.
func (*ConnectK8sConfig) FlatMapstructure() interface{ HCL2Spec() map[string]hcldec.Spec } {
	return new(FlatConnectK8sConfig)
}

// HCL2Spec returns the hcl spec of a ConnectK8sConfig.
// This spec is used by HCL to read the fields of ConnectK8sConfig.
// The decoded values from this spec will then be applied to a FlatConnectK8sConfig.
func (*FlatConnectK8sConfig) HCL2Spec() map[string]hcldec.Spec {
	s := map[string]hcldec.Spec{
		"kubeconfig_path": &hcldec.AttrSpec{Name: "kubeconfig_path", Type: cty.String, Required: false},
		"k8s_namespace":   &hcldec.AttrSpec{Name: "k8s_namespace", Type: cty.String, Required: false},
	}
	return s
}
